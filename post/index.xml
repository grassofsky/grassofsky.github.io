<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on grassofsky notebook</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on grassofsky notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 26 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>rasa problem - 意图中的use_entities选项</title>
      <link>http://localhost:1313/post/chatbots/rasa_problem_use_entities/</link>
      <pubDate>Thu, 26 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_problem_use_entities/</guid>
      <description>rasa problem - 意图中的use_entities选项 problem描述 准备工作 针对简单的天气查询demo，仅需要提供地点时间。 nlu.md如下： 1 2 3</description>
    </item>
    
    <item>
      <title>rasa - http api测试</title>
      <link>http://localhost:1313/post/chatbots/rasa_http_api/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_http_api/</guid>
      <description>rasa - http api测试 此处主要介绍如何对http api进行测试。关于http api的详细介绍可以参见帮助文档：https://rasa.com/d</description>
    </item>
    
    <item>
      <title>Rasa - Interactive Learning （翻译）</title>
      <link>http://localhost:1313/post/chatbots/rasa_interactive_learning/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_interactive_learning/</guid>
      <description>Rasa - Interactive Learning （翻译） 这篇文档会介绍如何使用命令行使用interactive learning（互动学习）。 在互动学习模式，当你和机器进行对话的时候</description>
    </item>
    
    <item>
      <title>Rasa - 领域 [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_domains/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_domains/</guid>
      <description>Rasa - 领域 [翻译] Domain（领域）定义了助手可以操控的世界。它指定了机器需要了解的intents,entities,slots,actio</description>
    </item>
    
    <item>
      <title>rasa blog - integrate response retrieval models in assistants built with Rasa （翻译）</title>
      <link>http://localhost:1313/post/chatbots/rasa_blog_integrate_response_retrieval_models/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_blog_integrate_response_retrieval_models/</guid>
      <description>rasa blog - integrate response retrieval models in assistants built with Rasa （翻译） 在这篇文章中，我们会介绍rasa新增的（试用阶段）retrieval-based response selection功能。R</description>
    </item>
    
    <item>
      <title>rasa blog - 为Rasa设置知识库来编码领域知识</title>
      <link>http://localhost:1313/post/chatbots/rasa_blog_setup_a_knowledge_base/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_blog_setup_a_knowledge_base/</guid>
      <description>rasa blog - 为Rasa设置知识库来编码领域知识 这篇文章紧接着rasa blog - 将Rasa和知识库进行集成。在这篇文章中，你将学习知识库的详细内容，以及如</description>
    </item>
    
    <item>
      <title>rasa blog - 利用Rasa Forms创建上下文对话助手 （翻译）</title>
      <link>http://localhost:1313/post/chatbots/rasa_blog_build_assistants_with_rasa_forms/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_blog_build_assistants_with_rasa_forms/</guid>
      <description>rasa blog - 利用Rasa Forms创建上下文对话助手 （翻译） 一个超越简单的FAQ式交互的上下文对话助手contextual assistant 需要的不仅仅是一个算法</description>
    </item>
    
    <item>
      <title>rasa blog - 将Rasa和知识库进行集成</title>
      <link>http://localhost:1313/post/chatbots/rasa_blog_integrating_rasa_with_knowledge_bases/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_blog_integrating_rasa_with_knowledge_bases/</guid>
      <description>rasa blog - 将Rasa和知识库进行集成 Knowledge bases: Encode domain knowledge and resolve entities in Rasa 在这个教程中，你将会学到： 如何使用知识库，将你的助手带到下一个等级 知识库的类别，以及使用</description>
    </item>
    
    <item>
      <title>rasa blog - 深入理解rasa NLU: Part1 - 意图分类 (翻译)</title>
      <link>http://localhost:1313/post/chatbots/rasa_blog_rasa_nlu_in_depth_part1/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_blog_rasa_nlu_in_depth_part1/</guid>
      <description>rasa blog - 深入理解rasa NLU: Part1 - 意图分类 (翻译) AI助手需要完成两项任务：理解用户和给出正确的回复。Rasa通过rasa自然语言理解（Rasa N</description>
    </item>
    
    <item>
      <title>rasa blog - 深入理解rasa NLU: Part2 - 实体识别 (翻译)</title>
      <link>http://localhost:1313/post/chatbots/rasa_blog_rasa_nlu_in_depth_part2/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_blog_rasa_nlu_in_depth_part2/</guid>
      <description>rasa blog - 深入理解rasa NLU: Part2 - 实体识别 (翻译) 欢迎来到Rasa NLU深入裂解系列的第二部分。在这个系列的文章中，我们会将从社区以及客户中获取的</description>
    </item>
    
    <item>
      <title>rasa blog - 深入理解rasa NLU: Part3 - 超参数调整 (翻译)</title>
      <link>http://localhost:1313/post/chatbots/rasa_blog_rasa_nlu_in_depth_part3/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_blog_rasa_nlu_in_depth_part3/</guid>
      <description>rasa blog - 深入理解rasa NLU: Part3 - 超参数调整 (翻译) 欢迎来到Rasa NLU深入理解系列的最后一篇文章。 在这个系列的文章中，我们会将从社区以及客户中</description>
    </item>
    
    <item>
      <title>rasa blog - 设计Rasa训练故事</title>
      <link>http://localhost:1313/post/chatbots/rasa_blog_designing_rasa_training_stories/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_blog_designing_rasa_training_stories/</guid>
      <description>rasa blog - 设计Rasa训练故事 训练数据都是每个机器学习模型的关键部分。对于对话AI来说也是一回事。我们设计了Rasa为了避免手写规则，你的助手应</description>
    </item>
    
    <item>
      <title>rasa source - core训练源码走读</title>
      <link>http://localhost:1313/post/chatbots/rasa_source_core/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_source_core/</guid>
      <description>rasa source - core训练源码走读 通过在rasa/cli/train.py: train_core函数中添加断点，使用pudb进行python调试调试</description>
    </item>
    
    <item>
      <title>rasa source - nlu classifiers源码走读</title>
      <link>http://localhost:1313/post/chatbots/rasa_source_nlu_classifiers/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_source_nlu_classifiers/</guid>
      <description>rasa source - nlu classifiers源码走读 classifiers包括如下实现： embedding_intent_classifier.py：构建</description>
    </item>
    
    <item>
      <title>rasa source - nlu 实体提取代码走读</title>
      <link>http://localhost:1313/post/chatbots/rasa_source_nlu_extractor/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_source_nlu_extractor/</guid>
      <description>rasa source - nlu 实体提取代码走读 实体提取实现包括如下文件： crf_entity_extractor.py，基于条件随机场的实现 mitie_entit</description>
    </item>
    
    <item>
      <title>rasa source - nlu中的tokenizer实现走读</title>
      <link>http://localhost:1313/post/chatbots/rasa_source_nlu_tokenizers/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_source_nlu_tokenizers/</guid>
      <description>rasa source - nlu中的tokenizer实现走读 所有的tokenizer相关的代码见目录：https://github.com/RasaHQ/ra</description>
    </item>
    
    <item>
      <title>rasa source - nlu模型训练源码走读</title>
      <link>http://localhost:1313/post/chatbots/rasa_source_train_nlu/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_source_train_nlu/</guid>
      <description>rasa source - nlu模型训练源码走读 执行命令为：rasa train nlu 入口函数为：rasa/cli/trian.py: train_nlu，该函数内部调用了ra</description>
    </item>
    
    <item>
      <title>rasa source - rasa shell 代码走读</title>
      <link>http://localhost:1313/post/chatbots/rasa_source_rasa_shell/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_source_rasa_shell/</guid>
      <description>rasa source - rasa shell 代码走读 在rasa/run.py: run函数中添加断点pudb.set_trace()。运行示例，examples/knowled</description>
    </item>
    
    <item>
      <title>rasa source - 初始化源码分析</title>
      <link>http://localhost:1313/post/chatbots/rasa_source_rasa_init/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_source_rasa_init/</guid>
      <description>rasa source - 初始化源码分析 执行命令为：rasa init。 对应的入口函数为：rasa/cli/scaffold.py: run。函数代码如下： 1 2 3 4</description>
    </item>
    
    <item>
      <title>rasa source - 命令行接口实现源码分析</title>
      <link>http://localhost:1313/post/chatbots/rasa_source_cli_analysis/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_source_cli_analysis/</guid>
      <description>rasa source - 命令行接口实现源码分析 关于命令行介绍可以参见：https://rasa.com/docs/rasa/user-guide/comman</description>
    </item>
    
    <item>
      <title>rasa source - 项目结构分析</title>
      <link>http://localhost:1313/post/chatbots/rasa_source_struct_analysis/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_source_struct_analysis/</guid>
      <description>rasa source - 项目结构分析 rasa依赖项分析 相关依赖项定义在setup.py文件中，关于setup.py的介绍可以参见：https://www.cn</description>
    </item>
    
    <item>
      <title>rasa如何支持富文本</title>
      <link>http://localhost:1313/post/chatbots/rasa_rich_text/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_rich_text/</guid>
      <description>rasa如何支持富文本 问题描述 对于FAQs机器人针对问题的答案可能需要很长的篇幅进行描述，那么在实现过程中，一般会先提供简单的回复描述，在附</description>
    </item>
    
    <item>
      <title>rasa对话系统demo实战 - 简单的火车票查询助手</title>
      <link>http://localhost:1313/post/chatbots/rasa_in_action_train_bookings/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_in_action_train_bookings/</guid>
      <description>rasa对话系统Demo实战 - 简单的火车票查询助手 描述 目的 基于rasa构建用于火车票查询的对话系统Demo。 对话示例 1 2 3 4 5 6 7 8 9 10 11 12</description>
    </item>
    
    <item>
      <title>rasa对话系统如何实现联想输入</title>
      <link>http://localhost:1313/post/chatbots/rasa_input_suggestion/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_input_suggestion/</guid>
      <description>rasa对话系统如何实现联想输入 rasa 文集 rasa文章导引（用于收藏） 联想输入 问题描述：输入关键词，从候选的问题中选择出相似度最大的前n个词。 具</description>
    </item>
    
    <item>
      <title>对话系统Rasa - Actions [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_actions/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_actions/</guid>
      <description>对话系统Rasa - Actions [翻译] Actions是机器针对用户输入的响应。Rasa中有四种actions： Utterance actions：以utter_开头，用</description>
    </item>
    
    <item>
      <title>对话系统Rasa - choosing a pipeline [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_choose_pipeline/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_choose_pipeline/</guid>
      <description>对话系统Rasa - choosing a pipeline [翻译] 选择一个NLU pipeline允许你自定义你的模型并针对你的数据进行微调。 简单的回答 如果你的训练示例小于10</description>
    </item>
    
    <item>
      <title>对话系统Rasa - Events</title>
      <link>http://localhost:1313/post/chatbots/rasa_api_events/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_api_events/</guid>
      <description>对话系统rasa - Events Rasa中的对话系统表示成一系列的events。这一页会对Rasa Core中定义的event类型进行介绍。 注意 如果你使用</description>
    </item>
    
    <item>
      <title>对话系统Rasa - fallback actions [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_fallback_actions/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_fallback_actions/</guid>
      <description>对话系统rasa - fallback actions 有些时候，你想要返回到fallback action，比如，回复“Sorry, I didn&#39;t understand that”。你可以处理fallbac</description>
    </item>
    
    <item>
      <title>对话系统rasa - Featurization （翻译）</title>
      <link>http://localhost:1313/post/chatbots/rasa_api_featurization/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_api_featurization/</guid>
      <description>对话系统rasa - Featurization （翻译） 为了将机器学习算法应用到对话AI，我们需要构建对话的词向量表示方式。 每个故事都对应一个tracker，该trac</description>
    </item>
    
    <item>
      <title>对话系统Rasa - forms [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_forms/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_forms/</guid>
      <description>对话系统rasa - forms (翻译) 注意：这里有个关于Rasa Forms用于slot filling更深入的介绍，见：here 一种最常用的对话模式是从</description>
    </item>
    
    <item>
      <title>对话系统rasa - Knowledge Base Actions （翻译）</title>
      <link>http://localhost:1313/post/chatbots/rasa_knowledge_base_actions/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_knowledge_base_actions/</guid>
      <description>对话系统rasa - Knowledge Base Actions （翻译） rasa文集 grassofsky：rasa文章导引（用于收藏） 警告：这个功能处于试验阶段。我们引入试验的功能</description>
    </item>
    
    <item>
      <title>对话系统rasa - Lock Stores （翻译）</title>
      <link>http://localhost:1313/post/chatbots/rasa_api_lock_stores/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_api_lock_stores/</guid>
      <description>对话系统rasa - Lock Stores （翻译） rasa使用票证锁定机制来确保按正确的顺序处理给定会话id的传入消息，并在消息处于活动处理状态时锁定会话。这意</description>
    </item>
    
    <item>
      <title>对话系统rasa - Messaging and Voice Channels （翻译）</title>
      <link>http://localhost:1313/post/chatbots/rasa_messaging_and_voice_channels/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_messaging_and_voice_channels/</guid>
      <description>对话系统rasa - Messaging and Voice Channels （翻译） 如果你在本机进行测试（而不是服务器上），你回需要使用ngrok。这个可以帮助Facebook，Slack等</description>
    </item>
    
    <item>
      <title>对话系统rasa - Policies （翻译）</title>
      <link>http://localhost:1313/post/chatbots/rasa_policies/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_policies/</guid>
      <description>对话系统rasa - Policies （翻译） Configuring Policies rasa.core.policies.Policy用来确定对话过程中每个步骤将要采取什么Action。 这里有</description>
    </item>
    
    <item>
      <title>对话系统rasa - retrieval actions</title>
      <link>http://localhost:1313/post/chatbots/rasa_retrieval_actions/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_retrieval_actions/</guid>
      <description>对话系统rasa - retrieval actions 警告：该功能还处于试验阶段。这个功能在未来的版本中可能被移除或改变。可以通过 forum进行反馈。 注意：here这里有详</description>
    </item>
    
    <item>
      <title>对话系统Rasa - slots [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_slots/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_slots/</guid>
      <description>对话系统rasa - slots [翻译] 什么是slots slots是机器的记忆。他们以key-value的形式进行存储，存储的信息包括用户提供的，以及从</description>
    </item>
    
    <item>
      <title>对话系统Rasa - Stories [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_stories/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_stories/</guid>
      <description>Rasa - Stories [翻译] Rasa故事集是用来训练Rasa对话管理模型的训练数据集格式。 一个故事表示用户和AI助手之间的一次对话，其中该对话中用户的输入</description>
    </item>
    
    <item>
      <title>对话系统rasa - tracker</title>
      <link>http://localhost:1313/post/chatbots/rasa_api_tracker/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_api_tracker/</guid>
      <description>对话系统rasa - tracker 1 class rasa.core.trackers.DialogueStateTracker(sender_id, slots, max_event_history=None) 用来维护对话状态。 max_event_history字段只提供这些最后的事件，它可以在tracker_stor</description>
    </item>
    
    <item>
      <title>对话系统rasa - tracker Stores （翻译）</title>
      <link>http://localhost:1313/post/chatbots/rasa_api_tracker_stores/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_api_tracker_stores/</guid>
      <description>对话系统rasa - tracker Stores （翻译） 所有的对话都存储在tracker store中。rasa core提供了不同存储类型的开箱即用实现。如果要使用其他</description>
    </item>
    
    <item>
      <title>对话系统rasa - Training Data Importers（翻译）</title>
      <link>http://localhost:1313/post/chatbots/rasa_api_training_data_importers/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_api_training_data_importers/</guid>
      <description>对话系统rasa - Training Data Importers（翻译） 默认情况下，可以使用命令行参数指定rasa在磁盘上查找训练数据的位置。然后，rasa加载任何</description>
    </item>
    
    <item>
      <title>对话系统Rasa - 响应 [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_responses/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_responses/</guid>
      <description>对话系统Rasa - 响应 [翻译] 如果想要助手响应用户的消息，你需要管理这些响应。在训练数据，故事中，你定义了你的助手需要执行的动作。这些动作使</description>
    </item>
    
    <item>
      <title>对话系统Rasa - 对话设计 [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_conversation_design/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_conversation_design/</guid>
      <description>对话系统Rasa - 对话设计 [翻译] 对话元素 对话元素是常见的会话元素。我们使用三个不同的抽象层次来讨论人工智能助手。这对产品团队很有帮助，这样</description>
    </item>
    
    <item>
      <title>对话系统rasa - 架构（翻译）</title>
      <link>http://localhost:1313/post/chatbots/rasa_architecture/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_architecture/</guid>
      <description>对话系统Rasa - 架构 [翻译] 消息处理 下图中描述了Rasa构建的助手在处理消息时的基本步骤： 这些步骤是： 消息传入后被Interpreter接</description>
    </item>
    
    <item>
      <title>对话系统rasa - 校验数据</title>
      <link>http://localhost:1313/post/chatbots/rasa_validate_data/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_validate_data/</guid>
      <description>对话系统rasa - 校验数据 测试域和数据文件是否有错误 要验证域文件、nlu数据或故事数据中是否有任何错误，请运行验证脚本。可以使用以下命令运行</description>
    </item>
    
    <item>
      <title>对话系统Rasa - 组件 [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_components/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_components/</guid>
      <description>对话系统Rasa - 组件 [翻译] 该文是Rasa NLU内建的每一个组件的介绍。如果你想要构建自定义组件，可以查看：Custom NLU Componen</description>
    </item>
    
    <item>
      <title>对话系统rasa - 评估模型</title>
      <link>http://localhost:1313/post/chatbots/rasa_evaluating_models/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_evaluating_models/</guid>
      <description>对话系统rasa - 评估模型 如果你想要NLU模型的超参数调整，请参考：rasa blog - 深入理解rasa NLU: Part3 - 超参数调整 (翻译) 评估NLU模型 机器学</description>
    </item>
    
    <item>
      <title>对话系统Rasa-入门教程 [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_tutorial/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_tutorial/</guid>
      <description>对话系统Rasa-入门教程 [翻译] 基本流程 安装rasa 创建新项目 查看NLU（自然语言理解）训练数据 定义模型的配置 写第一个stories（一个</description>
    </item>
    
    <item>
      <title>对话系统Rasa-训练数据格式 [翻译]</title>
      <link>http://localhost:1313/post/chatbots/rasa_training_data_format/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_training_data_format/</guid>
      <description>对话系统Rasa-训练数据格式 [翻译] 数据格式 支持Markdown和Json两种格式，通常情况下Markdonw更合适（Json格式的介绍省</description>
    </item>
    
    <item>
      <title>对话系统rasa示例简析 - concertbot</title>
      <link>http://localhost:1313/post/chatbots/rasa_example_analysis_concertbot/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_example_analysis_concertbot/</guid>
      <description>对话系统rasa示例简析 - concertbot 链接 https://github.com/RasaHQ/rasa/tree/master/examples/concertbot 示例说明 此处不赘述，参见：https://sourcegraph.com/github.com/RasaH</description>
    </item>
    
    <item>
      <title>对话系统rasa示例简析 - formbot</title>
      <link>http://localhost:1313/post/chatbots/rasa_example_analysis_formbot/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_example_analysis_formbot/</guid>
      <description>对话系统rasa示例简析 - formbot [TOC] 链接 https://github.com/RasaHQ/rasa/tree/master/examples/formbot 示例说明 详细见：https://github.com/RasaHQ/rasa/blob/master/e</description>
    </item>
    
    <item>
      <title>对话系统rasa示例简析 - Knowledge Base Bot</title>
      <link>http://localhost:1313/post/chatbots/rasa_example_analysis_knowledge_base_bot/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_example_analysis_knowledge_base_bot/</guid>
      <description>对话系统rasa示例简析 - Knowledge Base Bot 链接 https://github.com/RasaHQ/rasa/tree/master/examples/knowledgebasebot 示例说明 此处不赘述，参见：https://github.com/RasaHQ/rasa/tree/ma</description>
    </item>
    
    <item>
      <title>0. Chat Bots学习资料</title>
      <link>http://localhost:1313/post/chatbots/chat_bots_learning_resource/</link>
      <pubDate>Wed, 07 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/chat_bots_learning_resource/</guid>
      <description>Chat Bots学习资料 智能问答文献调研 1. 基于开源引擎的智能问答系统设计与实现，李一飞，华中科技大学，2017 主要功能模块划分如下： 涉及到的程序包</description>
    </item>
    
    <item>
      <title>[翻译]c&#43;&#43; 11特性走览</title>
      <link>http://localhost:1313/post/cpplearning/cpp11_feature/</link>
      <pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/cpplearning/cpp11_feature/</guid>
      <description>原文链接 http://soft.vub.ac.be/~cderoove/structuur2/C++11.pdf 空指针常量 - nullptr 1 2 3 4 5 void foo(char*); // 1 void foo(int); // 2 fool(NULL); //&amp;lt;c++03&amp;gt; 这个函数会调用函数2 fool(nullptr); //&amp;lt;c++11&amp;gt; 这个函数会调用函数1 标准类型 在c++03中，不同的类型在不同的</description>
    </item>
    
    <item>
      <title>fastbuild源码解析-memory-memdebug</title>
      <link>http://localhost:1313/post/fastbuild/fastbuild_memory_memdebug/</link>
      <pubDate>Tue, 10 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/fastbuild/fastbuild_memory_memdebug/</guid>
      <description>简介 fastbuild整个memory模块包括： mem。重载了operator new delete，用于内存泄漏的跟踪 MemTracker。内存泄</description>
    </item>
    
    <item>
      <title>fastbuild源码解析-memory-mem</title>
      <link>http://localhost:1313/post/fastbuild/fastbuild_memory_mem/</link>
      <pubDate>Thu, 05 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/fastbuild/fastbuild_memory_mem/</guid>
      <description>简介 fastbuild整个memory模块包括： mem。重载了operator new delete，用于内存泄漏的跟踪 MemTracker。内存泄</description>
    </item>
    
    <item>
      <title>fastbuild源码解析-test framework</title>
      <link>http://localhost:1313/post/fastbuild/fastbuild_test_framework/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/fastbuild/fastbuild_test_framework/</guid>
      <description>fastbuild源码解析-test framework test framework使用来干什么的？ test framework是一款类似于gtest的单元测试框架，但是相比</description>
    </item>
    
    <item>
      <title>二元线性回归分析</title>
      <link>http://localhost:1313/post/deeplearning/double_linear_regression/</link>
      <pubDate>Fri, 02 Feb 2018 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/deeplearning/double_linear_regression/</guid>
      <description>二元线性回归分析 二元，有两组数据；线性，数据($a_1, a_2, a_3, &amp;hellip;, a_n$)之间的关系，可以用公式$a_1b_1+a_2b_2+&amp;hellip;</description>
    </item>
    
    <item>
      <title>9. 在深度的对象</title>
      <link>http://localhost:1313/post/learningmodern3dgraphicsprogramming/9_objects_in_depth/</link>
      <pubDate>Fri, 16 Jun 2017 12:00:00 +0600</pubDate>
      
      <guid>http://localhost:1313/post/learningmodern3dgraphicsprogramming/9_objects_in_depth/</guid>
      <description>原文: https://paroj.github.io/gltut/ 第五章 在深度的对象 在这一章中，我们将会处理如何渲染多个对象，特别是当多个对象之间有一定的重叠的时候。 opengl中的多个对象 首先需要</description>
    </item>
    
    <item>
      <title>8. 其他的对象</title>
      <link>http://localhost:1313/post/learningmodern3dgraphicsprogramming/8_objects_at_rest/</link>
      <pubDate>Thu, 15 Jun 2017 12:00:00 +0600</pubDate>
      
      <guid>http://localhost:1313/post/learningmodern3dgraphicsprogramming/8_objects_at_rest/</guid>
      <description>原文: https://paroj.github.io/gltut/ 第四章 其他的对象 到目前为止，我们看到的都是平面的对象。比如，单个三角形。这一章，会介绍如何创建一个现实中的对象。 不真实的世界 orthographic cub</description>
    </item>
    
    <item>
      <title>7. opengl移动三角形</title>
      <link>http://localhost:1313/post/learningmodern3dgraphicsprogramming/7_opengl_moving_triangle/</link>
      <pubDate>Thu, 01 Jun 2017 12:00:00 +0600</pubDate>
      
      <guid>http://localhost:1313/post/learningmodern3dgraphicsprogramming/7_opengl_moving_triangle/</guid>
      <description>原文: https://paroj.github.io/gltut/ 第三章 opengl移动三角形 这章会讲述如何移动对象。会引入新的着色器相关的技术。 移动点 也许能够想到的移动三角形或其他对象最简单的方法</description>
    </item>
    
    <item>
      <title>1. 关于这本书</title>
      <link>http://localhost:1313/post/learningmodern3dgraphicsprogramming/1_about_this_book/</link>
      <pubDate>Tue, 30 May 2017 12:00:00 +0600</pubDate>
      
      <guid>http://localhost:1313/post/learningmodern3dgraphicsprogramming/1_about_this_book/</guid>
      <description>关于这本书 三维图像处理硬件很快成为了必不可少的组件。很多操作系统能够直接使用三维图像硬件，有些甚至要求需要有3D渲染能力的硬件。同时对于日益</description>
    </item>
    
    <item>
      <title>2. 环境设置</title>
      <link>http://localhost:1313/post/learningmodern3dgraphicsprogramming/2_set_up_environment/</link>
      <pubDate>Tue, 30 May 2017 12:00:00 +0600</pubDate>
      
      <guid>http://localhost:1313/post/learningmodern3dgraphicsprogramming/2_set_up_environment/</guid>
      <description>环境设置 由于本书中的例子，均是基于OpenGL实现的，因此你的工作环境需要能够运行OpenGL，为了读者能够更好的运行原文中的示例，此处简单</description>
    </item>
    
    <item>
      <title>3. 基础简介</title>
      <link>http://localhost:1313/post/learningmodern3dgraphicsprogramming/3_basic_introduction/</link>
      <pubDate>Tue, 30 May 2017 12:00:00 +0600</pubDate>
      
      <guid>http://localhost:1313/post/learningmodern3dgraphicsprogramming/3_basic_introduction/</guid>
      <description>基础简介 并不像本书的其他章节，这章内容没有相关的源代码或是项目。本章，我们将讨论向量，图形渲染理论，以及OpenGL。 向量 在阅读这本书的时候</description>
    </item>
    
    <item>
      <title>4. 你好，三角形</title>
      <link>http://localhost:1313/post/learningmodern3dgraphicsprogramming/4_hello_triangle/</link>
      <pubDate>Tue, 30 May 2017 12:00:00 +0600</pubDate>
      
      <guid>http://localhost:1313/post/learningmodern3dgraphicsprogramming/4_hello_triangle/</guid>
      <description>你好，三角形 传统的入门教程在介绍编程语言的时候，通常从“Hello，World！”的程序开始。这样的程序拥有最简单的能够直接输出“Hello</description>
    </item>
    
    <item>
      <title>5. 设置颜色</title>
      <link>http://localhost:1313/post/learningmodern3dgraphicsprogramming/5_playing_with_colors/</link>
      <pubDate>Tue, 30 May 2017 12:00:00 +0600</pubDate>
      
      <guid>http://localhost:1313/post/learningmodern3dgraphicsprogramming/5_playing_with_colors/</guid>
      <description>设置颜色 这一章会对上一章中绘制的三角形进行颜色的设定。而不是单纯的设置一个单一的颜色，这里我们会使用两种方式来对这个三角形设置颜色的变化。这</description>
    </item>
    
    <item>
      <title>6. opengl使用不同的缓存对象</title>
      <link>http://localhost:1313/post/learningmodern3dgraphicsprogramming/6_various_buffer_object/</link>
      <pubDate>Tue, 30 May 2017 12:00:00 +0600</pubDate>
      
      <guid>http://localhost:1313/post/learningmodern3dgraphicsprogramming/6_various_buffer_object/</guid>
      <description>opengl使用不同的缓存对象 在设置颜色一章中，我们使用了一个缓存对象来存储点和颜色的信息。那么我们有没有可能，将点和颜色的信息分开存储呢？</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/post/chatbots/rasa_theory_paper_starspace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/chatbots/rasa_theory_paper_starspace/</guid>
      <description>rasa theory paper - StarSpace: Embed All The Things!（1） - 文章阅读 原文链接 0. 摘要 我们提出了StarSpace，一种通用的神经嵌入模型（neural embedding model），用来处理各种问题：标签任务，如文本分类；排名任务，如信息抽取/web查询，基于协同过滤的推荐系统，基于内容的推荐，多关系图的嵌入，以及学习词、句子或文档嵌入。在每种情况下，模型都是通过嵌入那些由离散特征组成的实体并相互比较来工作的——学习依赖于任务的相似性。一些任务的实证结果显示，StarSpace对于现存的方法而言有高竞争性，同时也适用于这些方法不适用的情况。
 插曲：协同过滤和基于内容推荐有什么区别？
 1. Introduction 我们介绍的神经嵌入模型StarSpace，能够用来处理很广泛的任务：
 文本分类，或者其他的标记任务，如情感分类。 一系列实体的排名，如，对检索得到的web文档进行排名。 基于协同过滤的推荐，如推荐文档，音乐或视频。 基于内容的推荐，内容可以定义成离散特征，如文档中的词。 学习词，句子或文档嵌入。  StarSpace可以被视为处理这些任务的直接的和有效的强基线。在实验中，它被证明与几种竞争性方法不相上下或优于它们，同时它通常适用于那些许多方法都不适用的情况。
该方法通过从实体集合之间的关系学习具有离散特征表示的实体嵌入，直接用于分类任务或排序任务。一般情况下，StarSpace将不同类型的实体嵌入到一个向量嵌入空间中，因此名字中的Star（*），表示所有类型，space表示空间，在这个空间中对它们进行比较。它学习在给定查询实体、文档或对象的情况下排列一组实体、文档或对象，其中查询不一定与集合中的项属于同一类型。
我们使用6种不同的任务来评估方法的质量，包括文本识别，知识库中的链接预测，文档推荐，文章查找，句子匹配和学习通用的句子嵌入。StarSpace的开源项目见：https://github.com/facebookresearch/Starspace。
2. Related Word 隐藏的文本表示，或者是嵌入（embeddings），是词或文档的向量化表示，通常以非监督的方式从庞大的语料库中学习得到。这个领域中关于神经网络嵌入的工作有：(Bengio et al. 2003)，(Collobert et al. 2011)，word2vec(Mikolov et al. 2013)和最近的fastText(Bojanowski et al. 2017).在我们的试验中，我们和用于无监督嵌入的可伸缩模型的代表word2vec以及fastText进行了比较，同时还在SentEval(Conneau et al. 2017)任务上进行了句子嵌入的比较。
在监督嵌入的领域中，SSI(Bai et al. 2009)和WSABIE (Weston, Bengio, and Usunier 2011)是早期在NLU或信息提取任务((Weston et al. 2013), (Hermann et al. 2014))中使用的模型。更近一点的工作有：(Tang, Qin, and Liu 2015), (Zhang and LeCun 2015), (Conneau et al.</description>
    </item>
    
    <item>
      <title></title>
      <link>http://localhost:1313/post/itk/itk_example_digitallyreconstructedradiograph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/post/itk/itk_example_digitallyreconstructedradiograph/</guid>
      <description>简介 该示例根据 https://github.com/InsightSoftwareConsortium/ITK/blob/master/Examples/Filtering/DigitallyReconstructedRadiograph1.cxx 实现对应python版本。
重点类介绍 ResampleImageFilter 参见：https://itk.org/Doxygen/html/classitk_1_1ResampleImageFilter.html
通过坐标变换对图像进行重采样。ResampleImageFilter 通过一些坐标变换对存在的图像进行重采样，通过一些image function进行插值。
注意，插值函数的选择是很重要的。这个函数通过SetInterpolator()进行设定。默认的是LinearInterpolateImageFunction&amp;lt;InputImageType, TInterpolatorPrecisionType&amp;gt;，对于普通的医学影像是够用了的。但是，一些合成图像的像素是从有限的指定集合中提取的。一个例子是一个Mask，它将大脑标记成少量的组织类型。对于这样的图像，并不想要对这些像素值之间的值进行插值，这个时候 NearestNeighborInterpolateImageFunction&amp;lt; InputImageType, TCoordRep &amp;gt;会是一个更好的选择。
如果样本来自图像区域的外部，默认情况下使用默认的像素值。如果需要有不同的表现，可以通过SetExtrapolator().函数进行设置。
输出图像的信息（spacing，size，direction）需要进行设置。这些信息具有单位间距、零原点、标识方向的默认值。可选地，可以从参考图像获得输出信息。如果提供了参考图像并且用户参考图像处于打开状态，则将使用参考图像的间距、原点和方向。
CenteredEuler3DTransform 参见：https://itk.org/Doxygen/html/classitk_1_1CenteredEuler3DTransform.html
这个变换围绕特定的坐标系或者中心进行旋转，然后进行平移。
 SetComputeZYX： 旋转操作依赖于旋转顺序，设定为ZXY，或ZYX  RayCastInterpolateImageFunction 将光线投射到三维图像中，并使用双线性插值对遍历的每个体素平面进行积分。
 SetFocalPoint：设置光线源的位置 SetThreshold：设置阈值之上的voxels才会被累加 SetTransform：设置Transform，用来计算新的光源的位置  1 2 3 4 5 6 7  import math import numpy as np import itk import itkwidgets from itkwidgets import view from ipywidgets import interactive import ipywidgets as widgets   1 2 3 4 5 6 7 8  # 加载原始体数据并显示 input_name = &amp;#39;data/CT_3D_lung_fixed.</description>
    </item>
    
  </channel>
</rss>